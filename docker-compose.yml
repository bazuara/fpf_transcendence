services:
  django:
    build: ./django
    container_name: django
    env_file: .env
    volumes:
      - django_volume:/srcs
      - ./blockchain/scripts:/blockchain/scripts
      - ./blockchain/build:/blockchain/build
    ports:
      - 5000:443
    networks:
      - tran-net
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ganache:
        condition: service_healthy
  
  postgres:
    image: postgres:16.4
    container_name: postgres
    env_file: .env
    volumes:
      - postgres_volume:/var/lib/postgresql
    networks:
      - tran-net
    healthcheck:
      test: pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
      start_interval: 5s

  redis:
    image: redis:7.4.0
    container_name: redis
    networks:
      - tran-net
    healthcheck:
      test: redis-cli PING
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
      start_interval: 5s

  ganache:
    build:
      context: ./blockchain
      dockerfile: Dockerfile.ganache
    container_name: ganache
    command: ganache-cli -h 0.0.0.0 -p 8545 -i 5777
    ports:
      - "8545:8545"
    networks:
      - tran-net
    volumes:
      - ganache_data:/ganache_data
    healthcheck:
      test: ["CMD", "curl", "-s", "http://localhost:8545"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
      start_interval: 5s
    restart: always

  truffle:
    build:
      context: ./blockchain
      dockerfile: Dockerfile.truffle
    container_name: truffle
    command: truffle migrate --network development
    volumes:
      - ./blockchain/build:/app/build
    depends_on:
      ganache:
        condition: service_healthy
    networks:
      - tran-net
    working_dir: /app
    restart: on-failure
    environment:
      - HOST=ganache
      - PORT=8545
      - NETWORK_ID=5777

volumes:
  django_volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/django/srcs

  postgres_volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/postgres/dbdata
  
  ganache_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/blockchain/ganache_data
networks:
  tran-net: