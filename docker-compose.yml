services:
  django:
    build: ./django
    container_name: django
    env_file: .env
    volumes:
      - django_volume:/srcs
    ports:
      - 5000:443
    networks:
      - tran-net
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
  
  postgres:
    image: postgres:16.4
    container_name: postgres
    env_file: .env
    volumes:
      - postgres_volume:/var/lib/postgresql
    networks:
      - tran-net
    healthcheck:
      test: pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
      start_interval: 5s

  redis:
    image: redis:7.4.0
    container_name: redis
    networks:
      - tran-net
    healthcheck:
      test: redis-cli PING
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
      start_interval: 5s

volumes:
  django_volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/django/srcs

  postgres_volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/postgres/dbdata

networks:
  tran-net: